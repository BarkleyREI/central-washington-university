{"version":3,"file":"aggregate.js","mappings":"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","sources":["webpack:///../../node_modules/brei-project-utils/utils.js","webpack:///./modules/results.js","webpack:///./aggregate.js"],"sourcesContent":["/**\n * @name arrow\n * @returns {string}\n */\nconst arrow = function arrow() {\n\treturn `<div class=\"arrow\" role=\"presentation\">\n\t\t\t\t<div class=\"arrow__icon\">${iconTemplate('chevron')}</div>\n\t\t\t</div>`;\n};\n\n/**\n * @name buildQuery\n * @param {object} data\n * @returns {string}\n */\nconst buildQuery = function buildQuery(data) {\n\t// Create an array to hold the key/value pairs\n\tlet query = [];\n\n\t// Loop through the data object\n\tfor (let key in data) {\n\t\tif (data.hasOwnProperty(key)) {\n\t\t\tif (Array.isArray(data[key])) {\n\t\t\t\tdata[key].forEach(function (value) {\n\t\t\t\t\tquery.push(key + '=' + encodeURIComponent(value));\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tquery.push(key + '=' + encodeURIComponent(data[key]));\n\t\t\t}\n\t\t}\n\t}\n\n\t// Join each item in the array with an '&' and return the resulting string\n\tquery = query.join('&');\n\n\treturn query;\n};\n\n/**\n * @name closeButton\n * @param {string} style\n * @param {string} label\n */\nconst closeButton = function closeButton(style, label, dataSelector) {\n\treturn `<button class=\"close-button${(style && style.length > 0) ? (' ' + style) : ''}\" aria-label=\"${label}\"${((dataSelector) ? ' data-selector=\"' + dataSelector + '\"' : '')} tabindex=\"0\">${iconTemplate('close')}</button>`;\n};\n\n/**\n * @name dirButton\n * @param {string} style\n * @param {string} label\n * @returns {string}\n */\nconst dirButton = function dirButton(url, style, label) {\n\treturn `<a href=\"${(url && url !== '') ? url : '#'}\" class=\"dir-button${((style !== '') ? (' ' + style) : '')}\" aria-label=\"${label}\">${iconTemplate('chevron')}</a>`;\n};\n\n/**\n * @name filterChip\n * @param {string} id\n * @returns {string}\n */\nconst filterChip = function filterChip(id) {\n\treturn `<button class=\"filter-chip\" data-target=\"${id}\" tabindex=\"0\"><span class=\"filter-chip__text\">${$(id).val()}</span><div class=\"filter-chip__icon\" role=\"presentation\">${iconTemplate('x')}</div></button>`;\n};\n\n/**\n * @name getData\n * @param {string} url\n * @param {string} data\n * @param {string} type\n * @returns {object}\n */\nconst getData = function getData(url, data, type) {\n\tconst deferred = $.Deferred();\n\n\t$.ajax({\n\t\turl: url,\n\t\tmethod: 'GET',\n\t\tdata: data,\n\t\tdataType: type,\n\t\tsuccess(data) {\n\t\t\tdeferred.resolve(data);\n\t\t},\n\t\terror(jqXHR, textStatus) {\n\t\t\tdeferred.reject(textStatus);\n\t\t}\n\t});\n\n\treturn deferred.promise();\n};\n\n/**\n * @name getRandomNumber\n * @returns {number}\n * @description // Returns a 10 digit, random number\n */\nconst getRandomNumber = function getRandomNumber() {\n\treturn Math.floor(Math.random() * 9000000000) + 1000000000;\n};\n\n/**\n * @name iconTemplate\n * @param {string} name\n * @returns {string}\n */\nconst iconTemplate = function iconTemplate(name) {\n\treturn `\n\t\t<svg class=\"brei-icon brei-icon-${name}\" aria-hidden=\"true\">\n\t\t\t<use xlink:href=\"#brei-icon-${name}\"></use>\n\t\t</svg>\n\t`;\n};\n\n/**\n * @name mql\n * @const {object}\n */\nconst mql = {\n\tsmall: window.matchMedia('(min-width: 400px)'),\n\tmedium: window.matchMedia('(min-width: 768px)'),\n\tlarge: window.matchMedia('(min-width: 1024px)'),\n\txlarge: window.matchMedia('(min-width: 1200px)'),\n\txxlarge: window.matchMedia('(min-width: 1440px)'),\n\txxxlarge: window.matchMedia('(min-width: 1920px)')\n};\n\n/**\n * @name queryStringToJSON\n * @param {string} qs\n * @returns {object}\n */\nconst queryStringToJSON = function queryStringToJSON(qs) {\n\tqs = qs || window.location.search.slice(1);\n\n\tlet pairs = qs.split('&');\n\tlet result = {};\n\n\tpairs.forEach(function (p) {\n\t\tlet pair = p.split('=');\n\t\tlet key = pair[0];\n\t\tlet value = decodeURIComponent(pair[1] || '');\n\n\t\tif(result[key]) {\n\t\t\tif(Object.prototype.toString.call(result[key]) === '[object Array]') {\n\t\t\t\tresult[key].push(value);\n\t\t\t} else {\n\t\t\t\tresult[key] = [result[key], value];\n\t\t\t}\n\t\t} else {\n\t\t\tresult[key] = value;\n\t\t}\n\t});\n\n\treturn JSON.parse(JSON.stringify(result));\n};\n\n/**\n * @name ready\n * @param {func} callbackFunc\n * @description On DOM ready, execute callback function\n */\nconst ready = function ready(callbackFunc) {\n\t// Document is ready; call the callback function\n\tif (document.readyState !== 'loading') {\n\t\tcallbackFunc();\n\t\t// Modern browsers\n\t} else if (document.addEventListener) {\n\t\tdocument.addEventListener('DOMContentLoaded', callbackFunc, false);\n\t\t// Old IE browsers (IE <= 8)\n\t} else {\n\t\tdocument.attachEvent('onreadystatechange', function () {\n\t\t\tif (document.readyState === 'complete') {\n\t\t\t\tcallbackFunc();\n\t\t\t}\n\t\t});\n\t}\n};\n\n/**\n * @name scrollToTop\n * @param {object} element\n * @param {number} duration\n */\nconst scrollToTop = function scrollToTop(element, duration) {\n\t$('html, body').animate({\n\t\tscrollTop: element.offset().top\n\t}, duration);\n};\n\n/**\n * @name speechBubble\n * @param {string} style\n * @param {string} text\n * @returns {string}\n */\nconst speechBubble = function speechBubble(style, id, text) {\n\treturn `\n\t\t<div id=\"${id}\" class=\"speech-bubble${(style && style.length > 0) ? (' ' + style) : ''}\" role=\"tooltip\">\n\t\t\t<span class=\"speech-bubble__text\">${text}</span>\n\t\t\t${closeButton('close-button--light close-button--small', 'Click to close tooltip')}\n\t\t</div>\n\t`;\n};\n\nconst _extends = Object.assign || function (target) { for (let i = 1; i < arguments.length; i++) { let source = arguments[i]; for (let key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nconst utils = {\n\tarrow,\n\tbuildQuery,\n\tcloseButton,\n\tdirButton,\n\tfilterChip,\n\tgetData,\n\tgetRandomNumber,\n\ticonTemplate,\n\tmql,\n\tqueryStringToJSON,\n\tready,\n\tscrollToTop,\n\tspeechBubble,\n\t_extends\n};\n\nexport {\n\tarrow,\n\tbuildQuery,\n\tcloseButton,\n\tdirButton,\n\tfilterChip,\n\tgetData,\n\tgetRandomNumber,\n\ticonTemplate,\n\tmql,\n\tqueryStringToJSON,\n\tready,\n\tscrollToTop,\n\tspeechBubble,\n\t_extends\n};\n\nexport { utils as default };\n","// import {scrollToTop} from '../lib/utils';\n// import {throttle} from '../lib/throttle';\n\nconst results = {\n\n\telem: {\n\t\t$checkboxes: $('.filter__item--checkboxes'),\n\t\t$chips: $('.aggregate__chips'),\n\t\t$count: $('.aggregate__count'),\n\t\t$keywords: $('.keyword'),\n\t\t$loading: $('.aggregate__loading'),\n\t\t$pagination: $('.aggregate__pagination'),\n\t\t$reset: $('.aggregate__reset'),\n\t\t$results: $('.aggregate__results'),\n\t\t$selects: $('.filter-selectbox')\n\t},\n\t\n\tdataSource: null,\n\tfilters: {},\n\tinitial: true,\n\tresults: '',\n\tsuggestions: '',\n\t\n\t// initialize the search aggregate\n\tinit() {\n\t\tthis.dataSource = this.elem.$results.data('src'); // set the data source to the data-src attribute of $results\n\t\tthis.buildFilters(); // build the state machine from the filters present on the page\n\t\tthis.getQuery(); // parse the query string to a specific request has been passed to the page, and update the state accordingly\n\t\tthis.setControls(); // update the filters based on the current state\n\t\tthis.buildChips(); // update the chips based on the current state\n\t\tthis.setQuery(false, false); // update the query string based on the current state\n\t\twindow.onpopstate = this.filterState; // run this function when the user navigates using the browser previous/next buttons\n\t\tthis.elem.$reset.on('click', this.filterReset); // run this function when the user clicks the \"clear all\" option\n\t},\n\n\t// rebind functions to filters after successfully updating the state\n\tbindUIActions() {\n\t\tthis.elem.$checkboxes.find('input').on('change', this.filterCheckbox);\n\t\tthis.elem.$keywords.find('button').on('click', this.filterKeyword);\n\t\tthis.elem.$keywords.find('input').on('keydown', this.filterKeyword);\n\t\tthis.elem.$selects.find('select').on('change', this.filterSelect);\n\t},\n\n\t// unbind UI from the filters while in the process of updating the state\n\tunbindUIActions() {\n\t\tthis.elem.$checkboxes.find('input').off('change');\n\t\tthis.elem.$keywords.find('button').off('click');\n\t\tthis.elem.$selects.find('select').off('change', this.filterSelect);\n\t},\n\n\t// add a new chip to the list of chips and bind the unfilterChip action to it\n\taddChip(key, label) {\n\t\tlet output = '<a href=\"#' + key + '\" class=\"chip\"><span class=\"chip__close\"><span class=\"show-for-sr\">Remove this filter</span><svg class=\"brei-icon brei-icon-close\" focusable=\"false\"><use href=\"#brei-icon-close\"></use></svg></span><span class=\"chip__label\">' + label + '</span></a>';\n\t\tresults.elem.$chips.prepend(output);\n\t\t$('.chip[href=\"#' + key + '\"]').on('click', results.unfilterChip);\n\t},\n\n\t// remove a chip from the list of chips\n\tremoveChip(key) {\n\t\t$('.chip[href=\"#' + key + '\"]').remove();\n\t},\n\n\t// update the state when a chip is clicked\n\tunfilterChip(e) {\n\t\te.preventDefault();\n\t\tlet target = e.currentTarget.hash;\n\t\tlet value = target.substr(1);\n\n\t\t// if the filter is a checkbox, click it (which will unselect it and trigger a refresh)\n\t\tif( $(target)[0].type === 'checkbox' ) {\n\t\t\t$(target).trigger('click');\n\t\t}\n\n\t\t// if the filter is a keyword search, zero its value and the pageindex, and update the query\n\t\tif( $(target)[0].type === 'search' ) {\n\t\t\t$(e.currentTarget).remove();\n\t\t\t$(target)[0].value = '';\n\t\t\tresults.filters[value] = '';\n\t\t\tresults.filters['pageindex'] = 0;\n\t\t\tresults.setQuery(true, true);\n\t\t}\n\n\t\t// if the filter is a selectbox, set the selectedIndex to -1 and trigger the change event\n\t\tif( $(target)[0].localName === 'select' ) {\n\t\t\t$(target)[0].selectedIndex = -1;\n\t\t\t$(target).siblings('.selectability').find('[role=\"textbox\"]')[0].innerHTML = ''; // if you are using the selectability script, zero out the value of the textbox it uses for displaying the curent value\n\t\t\t$(target).trigger('change').removeClass('js-selectability--has-value');\n\t\t}\n\t},\n\n\t// build chips from filter array\n\tbuildChips() {\n\t\tfor (let key in results.filters) {\n\t\t\tlet keyid = '#' + key;\n\t\t\tlet label = '';\n\t\t\tif (results.filters.hasOwnProperty(key)) {\n\t\t\t\t// if the filter is an array (checkbox) add an item for each item in the array\n\t\t\t\tif (Array.isArray(results.filters[key])) {\n\t\t\t\t\tif (results.filters[key].length > 0 ) {\n\t\t\t\t\t\tfor (let i = 0; i < results.filters[key].length; i = i + 1) {\n\t\t\t\t\t\t\tlet item = $('[id^=\"' + key + '\"][value=\"' + results.filters[key][i] + '\"]');\n\t\t\t\t\t\t\tlabel = item.siblings('label')[0].innerText;\n\t\t\t\t\t\t\tresults.addChip(item.attr('id'), label);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// if the filter is not the pagindex or pagesize parameter\n\t\t\t\t\tif((key !== 'pageindex') && (key !== 'pagesize') && (results.filters[key] !== '')) {\n\t\t\t\t\t\t// if the filter is an input, set the label to the value\n\t\t\t\t\t\tif( $(keyid)[0].localName === 'input') {\n\t\t\t\t\t\t\tlabel = $(keyid)[0].value;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// if the filter is a label, set the label to the text of the seleted option\n\t\t\t\t\t\tif( $(keyid)[0].localName === 'select') {\n\t\t\t\t\t\t\tlabel = $(keyid)[0].options[$(keyid)[0].selectedIndex].text;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresults.addChip(key, label);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t// build the filter array from the elements on the page\n\tbuildFilters() {\n\t\tif(results.elem.$keywords.length > 0) {\n\t\t\tresults.filters['search'] = '';\n\t\t}\n\t\t//  for each group of checkboxes to the page, add an array with a name equal to the legend\n\t\tif(results.elem.$checkboxes.length > 0) {\n\t\t\tresults.elem.$checkboxes.each(function() {\n\t\t\t\tresults.filters[$(this).find('legend')[0].innerText] = [];\n\t\t\t});\n\t\t}\n\t\t// for each keyword search (there should only be one) add a string with a name equal to the id\n\t\tif(results.elem.$keywords.length > 0) {\n\t\t\tresults.elem.$keywords.each(function() {\n\t\t\t\tresults.filters[$(this).find('input')[0].id] = '';\n\t\t\t});\n\t\t}\n\t\t// for each selectbox, add a string wiith a name equal to the id\n\t\tif(results.elem.$selects.length > 0) {\n\t\t\tresults.elem.$selects.each(function() {\n\t\t\t\tresults.filters[$(this).find('select')[0].id] = '';\n\t\t\t});\n\t\t}\n\t\t// set initial pageindex to 0 and initial pagesize to 10\n\t\tresults.filters['pageindex'] = 0;\n\t\tresults.filters['pagesize'] = 10;\n\t},\n\n\t// build a query string from the filters\n\tbuildQuery() {\n\t\tlet data = this.filters;\n\t\tlet query = [];\n\t\tfor (let key in data) {\n\t\t\tif (data.hasOwnProperty(key)) {\n\t\t\t\tif (Array.isArray(key)) {\n\t\t\t\t\tdata[key] = key.toString();\n\t\t\t\t}\n\t\t\t\tquery.push(encodeURIComponent(key) + '=' + encodeURIComponent(data[key]));\n\t\t\t}\n\t\t}\n\t\tquery = query.join('&').replace(/%2C/g, ',');\n\t\treturn query;\n\t},\n\n\t// filtering on checkbox click\n\tfilterCheckbox(e) {\n\t\tlet id = e.currentTarget.id;\n\t\tlet key = id.substring(0, e.currentTarget.id.indexOf('-'));\n\t\tlet value = e.currentTarget.value;\n\t\tlet label = $(e.currentTarget).siblings('label')[0].innerText;\n\t\tlet status = e.currentTarget.checked;\n\n\t\t// if the checkbox is checked, add a chip and add it to the state\n\t\tif(status) {\n\t\t\tresults.addChip(id, label);\n\t\t\tresults.filters[key].push(value);\n\t\t// otherwise, remove the chp and splice it out of the state\n\t\t} else {\n\t\t\tresults.removeChip(id);\n\t\t\tresults.filters[key].splice(results.filters[key].indexOf(value),1);\n\t\t}\n\t\tresults.filters['pageindex'] = 0; // reset the page index\n\t\tresults.setQuery(true, true); // set the query\n\t},\n\n\t// filtering on keyword submit\n\tfilterKeyword(e) {\n\t\tlet filter = false;\n\t\tlet key = '';\n\n\t\t// if the triggering event is a keydown inside the input, only trigger if there is a return\n\t\t/// set the key to the id of the input\n\t\tif ((e.type === 'keydown') && (e.keyCode === 13)) {\n\t\t\tkey = $(e.currentTarget)[0].id;\n\t\t\tfilter = true;\n\t\t}\n\n\t\t// if the triggering event is a click on the submit button\n\t\t// set the key to id of the adjacent input\n\t\tif (e.type === 'click') {\n\t\t\tkey = $(e.currentTarget).siblings('input')[0].id;\n\t\t\tfilter = true;\n\t\t}\n\n\t\tif (filter) {\n\t\t\te.preventDefault();\n\t\t\tlet value = '<span>' + $('#' + key)[0].value.trim() + '</span>'; // wrap the value in a span because if there's no HTML content the next line will product a blank output\n\t\t\tlet safeValue = $(value).text();\n\t\t\tif(safeValue.length > 0) {\n\t\t\t\tresults.removeChip(key); // remove any existing chip for the keyword\n\t\t\t\tresults.addChip(key, safeValue); // add a new chip for the keywords current value\n\t\t\t\tresults.filters[key] = safeValue; // update the filters\n\t\t\t\tresults.filters['pageindex'] = 0; // reset the page index\n\t\t\t\tresults.setQuery(true, true); // set the query\n\t\t\t}\n\t\t}\n\t},\n\n\t// filtering on pagination click\n\tfilterPagination(e) {\n\t\te.preventDefault();\n\t\tresults.filters['pageindex'] = e.currentTarget.hash.substr(1); // update the pageindex to the new value\n\t\tresults.setQuery(true, true); // set the query\n\t},\n\n\t// reset all filters\n\tfilterReset() {\n\t\tresults.unbindUIActions();\n\t\tresults.elem.$checkboxes.find('input').prop('checked',false);\n\t\tresults.elem.$keywords.find('input').val('');\n\t\tif(results.elem.$selects.length > 0) {\n\t\t\tresults.elem.$selects.find('select')[0].selectedIndex = -1;\n\t\t\tresults.elem.$selects.find('select').siblings('.selectability').find('[role=\"textbox\"]').html('');\n\t\t\tresults.elem.$selects.find('select').removeClass('js-selectability--has-value');\n\t\t}\n\t\t$('.chip').remove();\n\t\tresults.buildFilters();\n\t\tresults.setQuery(true, true);\n\t},\n\n\t// filter on selectbox change\n\tfilterSelect(e) {\n\t\te.preventDefault();\n\t\tlet key = e.currentTarget.id;\n\t\tlet value = e.currentTarget.value;\n\t\tresults.removeChip(key);\n\t\tif(e.currentTarget.selectedIndex > -1) {\n\t\t\tlet label = e.currentTarget.options[e.currentTarget.selectedIndex].text;\n\t\t\t$(e.currentTarget).siblings('.selectability').find('[role=\"textbox\"]')[0].innerHTML = label;\n\t\t\tresults.addChip(key, label);\n\t\t}\n\t\tresults.filters[key] = value;\n\t\tresults.filters['pageindex'] = 0;\n\t\tresults.setQuery(true, true);\n\t},\n\n\t// filtering on history state change\n\tfilterState() {\n\t\tresults.getQuery();\n\t\tresults.setControls();\n\t\tresults.setQuery(false, false);\n\t},\n\n\t// get data\n\tgetData(query) {\n\t\tlet deferred = $.Deferred();\n\t\t$.ajax({\n\t\t\turl: results.dataSource,\n\t\t\tmethod: 'GET',\n\t\t\tdata: query,\n\t\t\tdataType: 'html',\n\t\t\tsuccess: function(data) {\n\t\t\t\tdeferred.resolve(data);\n\t\t\t},\n\t\t\terror: function(jqXHR, textStatus, errorThrow) {\n\t\t\t\tconsole.log(jqXHR, errorThrow);\n\t\t\t\tdeferred.reject(textStatus);\n\t\t\t}\n\t\t});\n\t\treturn deferred.promise();\n\t},\n\t\n\t// overwrite default filter settings with values passed through query string, ignoring blank values and values without a filter\n\tgetQuery() {\n\t\tif (window.location.search.length > 0) { \n\t\t\tlet searchParams = new URLSearchParams(window.location.search);\n\t\t\tsearchParams.forEach(function (value,key) {\n\t\t\t\tif(value !== '') {\n\t\t\t\t\tif(results.filters[key] !== undefined) {\t\t\t\t\t\n\t\t\t\t\t\tif (Array.isArray(results.filters[key])) {\n\t\t\t\t\t\t\tresults.filters[key] = [];\n\t\t\t\t\t\t\tvalue = value.split(',');\n\t\t\t\t\t\t\tresults.filters[key] = value;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresults.filters[key] = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t},\n\n\t// build and render count from retrieved results\n\trenderCount() {\n\t\tlet output = parseInt(results.filters['pageindex']) * parseInt(results.filters['pagesize']) + 1;\n\t\tlet maxCount = output + parseInt(results.filters['pagesize']) - 1;\n\t\tif (maxCount > results.results[0].TotalCount) {\n\t\t\tmaxCount = results.results[0].TotalCount;\n\t\t}\n\t\tif (parseInt(maxCount) !== 1) {\n\t\t\toutput += '-';\n\t\t\toutput += maxCount;\n\t\t\toutput += ' of ';\n\t\t\toutput += results.results[0].TotalCount;\n\t\t\toutput += ' Results';\n\t\t} else {\n\t\t\toutput += ' Result';\n\t\t}\n\t\tresults.elem.$count.html(output);\n\t},\n\n\t// build and render pagination from retrieved results\n\trenderPagination() {\n\t\tlet items = [];\n\t\tlet filters = results.filters;\n\t\tlet current = parseInt(filters['pageindex']);\n\t\tlet max = Math.ceil(parseInt(results.results[0].TotalCount) / parseInt(filters['pagesize'])) - 1;\n\t\tlet output = '<ul class=\"pagination__list clearfix\" aria-label=\"Pagination\">';\n\n\t\t// push all the items we need at a minimum: first, current, last, and output bracketing current\n\t\titems.push(0, current - 1, current, current + 1, max);\n\n\t\t// when the values are close to first or last, push some extra options to ensure that we always have at least four options showing\n\t\tif (current < 2) {\n\t\t\titems.push(2);\n\t\t}\n\t\tif (current > (max - 1)) {\n\t\t\titems.push(max - 2);\n\t\t}\n\t\t\n\t\t// filter out results that are less than zero\n\t\t// filter out results that are greater than max\n\t\t// filter out non-unique items\n\t\t// sort\n\t\titems = items.filter(function(x){ return x > -1 });\n\t\titems = items.filter(function(x){ return x <= max });\n\t\titems = [...new Set(items)];\n\t\titems = items.sort(function(a, b){return a-b});\n\n\t\t// previous button\n\t\toutput += '<li class=\"pagination__item pagination__item--prev';\n\t\tif(current === 0) {\n\t\t\toutput += ' pagination__item--disabled';\n\t\t}\n\t\toutput += '\"><a href=\"#' + (current - 1) + '\" class=\"pagination__button btn btn--pagination\"><span class=\"btn__icon\"><svg class=\"brei-icon brei-icon-chevron\" focusable=\"false\"><use href=\"#brei-icon-chevron\"></use></svg></span><span class=\"show-for-sr\">Previous Page</span></a></li>';\n\n\t\t// individual results\n\t\tfor(let i = 0; i < items.length; i = i + 1) {\n\t\t\tif((i === 0) || (items[i] !== items[i - 1])) {\n\t\t\t\tif((i > 0) && ((items[i] - items[i - 1]) > 1)) {\n\t\t\t\t\toutput += '<li class=\"pagination__item pagination__item--spacer\"><span class=\"pagination__span\">...</span></li>';\n\t\t\t\t}\n\t\t\t\tif(items[i] === current) {\n\t\t\t\t\toutput += '<li class=\"pagination__item pagination__item--active\"><a href=\"#' + items[i] + '\" class=\"pagination__link\" tabindex=\"-1\"><span class=\"show-for-sr\">You\\'re on page</span> ' + (items[i] + 1) + '</a></li>';\n\t\t\t\t} else {\n\t\t\t\t\tlet classy = '';\n\t\t\t\t\tif(i === 0) { classy = ' pagination__item--first' }\n\t\t\t\t\tif(i === (items.length - 1)) { classy = ' pagination__item--last'; }\t\t\t\t\t\n\t\t\t\t\toutput += '<li class=\"pagination__item' + classy + '\"><a href=\"#' + items[i] + '\" class=\"pagination__link\" aria-label=\"Page ' + (items[i] + 1) + '\">' + (items[i] + 1) + '</a></li>';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// next button\n\t\toutput += '<li class=\"pagination__item pagination__item--next';\n\t\tif(current === max) {\n\t\t\toutput += ' pagination__item--disabled';\n\t\t}\n\t\toutput += '\"><a href=\"#' + (current + 1) + '\" class=\"pagination__button btn btn--pagination\"><span class=\"btn__icon\"><svg class=\"brei-icon brei-icon-chevron\" focusable=\"false\"><use href=\"#brei-icon-chevron\"></use></svg></span><span class=\"show-for-sr\">Previous Page</span></a></li></ul>';\n\t\t\n\t\tresults.elem.$pagination.html(output);\n\t\t$('.pagination__button, .pagination__link').on('click', results.filterPagination); // rebind UI actions\n\t},\n\n\t// build and render retrieved results \n\trenderResults() {\n\n\t\t// hide the loading animation\n\t\tresults.elem.$loading.hide();\n\n\t\t// if this is not the initial set-up of the aggregate, zero out any featured results on the page\n\t\tif(results.initial === false) {\n\t\t\t$('.aggregate__feature').empty();\n\t\t}\n\n\t\t// if there are results, render the count, results, and pagination then fade them in\n\t\tif(results.results[0].TotalCount > 0) {\n\t\t\tresults.filters['pagesize'] = parseInt(results.results[0].PageSize); // reset pagesize based on response\n\t\t\tresults.renderCount();\n\t\t\tresults.elem.$count.fadeIn();\n\t\t\tresults.elem.$results.html(results.results[0].Results).fadeIn();\n\t\t\tif(results.results[0].TotalCount > results.filters['pagesize']) {\n\t\t\t\tresults.renderPagination();\n\t\t\t\tresults.elem.$pagination.fadeIn();\n\t\t\t}\n\t\t} else {\n\t\t\tresults.elem.$results.html('<p class=\"aggregate__none\">No matching results were found.</p>').fadeIn();\t\n\t\t}\n\n\t\t// set the state of the machine so we know to zero the featured results next time\n\t\tresults.initial = false;\n\t},\n\n\t// update filters elements based on filters\n\tsetControls() {\n\t\t// unbind all UI actions\n\t\tresults.unbindUIActions();\n\n\t\t// uncheck every checkbox\n\t\tresults.elem.$checkboxes.find('input').prop('checked',false);\n\t\t\n\t\tfor (let key in results.filters) {\n\t\t\t// if the filter is an array (i.e. a checkbox) loop through the array and check every checkbox in it\n\t\t\tif (results.filters.hasOwnProperty(key)) {\n\t\t\t\tif (Array.isArray(results.filters[key])) {\n\t\t\t\t\tfor (let i = 0; i < results.filters[key].length; i = i + 1) {\n\t\t\t\t\t\tlet item = $('[id^=\"' + key + '\"][value=\"' + results.filters[key][i] + '\"]');\n\t\t\t\t\t\titem.prop('checked',true);\n\t\t\t\t\t}\n\t\t\t\t} \n\t\t\t\telse {\n\t\t\t\t\t// if the filter is not an array, or the pageindex or pagesize parameters\n\t\t\t\t\tif((key !== 'pageindex') && (key !== 'pagesize') && (results.filters[key] !== '')) {\n\t\t\t\t\t\tlet keyid = '#' + key;\n\t\t\t\t\t\t// if the filter is a keyword search (input box) set its value\n\t\t\t\t\t\tif( $(keyid)[0].localName === 'input' ) {\n\t\t\t\t\t\t\t$(keyid)[0].value = results.filters[key];\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// if the filter is a selectbox, update its value and trigger the change event for selectability\n\t\t\t\t\t\tif( $(keyid)[0].localName === 'select' ) {\n\t\t\t\t\t\t\t$(keyid).val(results.filters[key]).trigger('change').addClass('js-selectability--has-value');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\t// rebind UI actions\n\t\tresults.bindUIActions();\n\t},\n\n\t// update queryString based on filters\n\tsetQuery(reposition, push) {\n\t\t// build the request to the datasource\n\t\t\n\t\tlet query = results.buildQuery();\n\t\tlet dataObj = results.getData(query);\n\n\t\t// if reposition is true, scroll to the top of the results\n\t\tif (reposition === true) {\n\t\t\t$('html, body').animate({ scrollTop: $('.aggregate__content').offset().top }, 425);\n\t\t}\n\n\t\t// if push is true, add the new page state to the browser history; otherwise, just replace the page state\n\t\tif (push === true) {\n\t\t\thistory.pushState(null, '', '?' + query);\n\t\t} else {\n\t\t\thistory.replaceState(null, '', '?' + query);\n\t\t}\n\t\t\n\t\t// show the \"loading\" animation, then fade out and empty all other page elements\n\t\tresults.elem.$loading.show();\n\t\tresults.elem.$count.fadeOut().empty();\n\t\tresults.elem.$results.fadeOut().empty();\n\t\tresults.elem.$pagination.fadeOut().empty();\n\n\t\t// send a request to the data source; when it is finished render the results\n\t\t$.when(dataObj)\n\t\t\t.done(function(data) {\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\tresults.results = JSON.parse(data);\n\t\t\t\t\tresults.renderResults();\n\t\t\t\t}, 500);\n\t\t\t})\n\t\t\t.fail(function () {\n\t\t\t\tconsole.log('API ERROR: No results were returned')\n\t\t\t});\n\t}\n\n};\n\nexport {results};\n","import { ready } from 'brei-project-utils';\n\nimport { results } from './modules/results';\n\nconst aggregate = {\n\tinit() {\n\t\tresults.init();\n\t}\n};\n\nready(function () {\n\taggregate.init();\n});\n"],"names":["window","matchMedia","ready","callbackFunc","document","readyState","addEventListener","attachEvent","Object","assign","results","elem","$checkboxes","$","$chips","$count","$keywords","$loading","$pagination","$reset","$results","$selects","dataSource","filters","initial","suggestions","init","this","data","buildFilters","getQuery","setControls","buildChips","setQuery","onpopstate","filterState","on","filterReset","bindUIActions","find","filterCheckbox","filterKeyword","filterSelect","unbindUIActions","off","addChip","key","label","output","prepend","unfilterChip","removeChip","remove","e","preventDefault","target","currentTarget","hash","value","substr","type","trigger","localName","selectedIndex","siblings","innerHTML","removeClass","keyid","hasOwnProperty","Array","isArray","length","i","item","innerText","attr","options","text","each","id","buildQuery","query","toString","push","encodeURIComponent","join","replace","substring","indexOf","checked","splice","filter","keyCode","trim","safeValue","filterPagination","prop","val","html","getData","deferred","Deferred","ajax","url","method","dataType","success","resolve","error","jqXHR","textStatus","errorThrow","console","log","reject","promise","location","search","URLSearchParams","forEach","undefined","split","renderCount","parseInt","maxCount","TotalCount","renderPagination","items","current","max","Math","ceil","x","Set","sort","a","b","classy","renderResults","hide","empty","PageSize","fadeIn","Results","addClass","reposition","dataObj","animate","scrollTop","offset","top","history","pushState","replaceState","show","fadeOut","when","done","setTimeout","JSON","parse","fail","aggregate"],"sourceRoot":""}